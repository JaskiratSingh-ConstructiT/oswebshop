<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<html>
<head>
<STYLE TYPE="text/css">BODY { font-size: 11pt; font-family: arial; }</STYLE>
<title>Readme for the SoapApiDemo C# Sample</title>
<style type="text/css">
table { width : 65%; border : none; empty-cells : show; }
table.note { border: .5px #408080; }
table.nav { margin-left : -4%; }
.navbarUniv { width:95%; margin:0; border-collapse:collapse; margin-bottom:15px; }
.navlinkUniv { color:#999999; margin:0 10px; }
td.navbarUniv { background:white; }
th, .heading, th.heading { font-size: 12px; background-color: #CCCC99; vertical-align : top; text-align : left; padding: 4px 4px 4px 4px; }
th.clear, td.clear { background-color: #FFFFFF; }
td.future { color: Gray; }
td.current { font-weight: bold; background-color: #FFFF66; }
td.date { white-space: nowrap; }
td.note { color: #880000; background-color: #E6F8D6; padding: 4px 4px 4px 4px;}
td.version { font-weight: bold; white-space: nowrap; }
td, div.CellBody { font-size: 12px; background-color: #EFEFEF; vertical-align : top; padding: 0px 4px 0px 4px;}
div.Table {text-align: left}
div.TableTitle, div.RefHeading { font-weight: bold; }
</style>
</head>

<body>

<h2>Readme for the SoapApiDemo C# Sample</h2>
<p>This sample shows how to use SDK wrapper classes (AddItemCall, GetItemCall, etc).</p> 

<h3>Instructions for app.config</h3>
<p>Before using the sample, please insert values
(and/or review the default values), as follows, in 
the <i>...Samples\C#\SoapApiDemo\app.config</i> file:</p> 

<div class="Table">
<table cellspacing="2">

<tr>
<th>Key</th>
<th>Value</th>
</tr>

<tr>
<td>Environment.ApiServerUrl</td>
<td>Api server to call API
</td>
</tr>

<tr>
<td>Environment.EpsServerUrl</td>
<td>Eps server to upload pictures
</td>
</tr>

<tr>
<td>UserAccount.ApiToken</td>
<td>The token for the user for whom you are making API calls</td>
</tr>

</table>
</div>

<p>It is recommended that you first try the sample with a sandbox-user token that you already have obtained. However, if you don't have a token for UserAccount.ApiToken, 
you can create one using the sample.
</p>

<p>Please also see the following Knowledge Base articles:</p>
<ul>
	<li><a href="https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=903">Error 127 - Invalid application name</a>
	<li><a href="https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=429">What Server URL should I use when I make an Trading API call request</a>
</ul>


<h3>Using the Sample</h3>
<ul>
  <li>To build the sample, open ...Samples\C#\CSharp Samples.sln in Visual Studio .NET and choose Build.</li>
  <li>SoapApiDemo lists calls that correspond to wrapper classes in the main window.  
    Each wrapper class is represented by its verb in the list box (e.g., &quot;AddItem&quot;  
    in the list represents the AddItemCall wrapper class)</li> 
  <li>Click the &quot;Config Api Account&quot; button in the main window to access 
    the FormAccount dialog. It demonstrates how to collect user input to 
    construct an ApiContext object, which is required for calling each class. </li>
  <li>When you click the &quot;Run [Verb]&quot; (e.g., &quot;Run 
    AddItem&quot;) button, SoapApiDemo will invoke a form with the name 
    convention of &quot;Form[Verb]&quot;. For example, if you click &quot;Run AddItem&quot;, 
    FormAddItem will be displayed.</li>
  <li>Each API form (e.g., FormAddItem) follows the same pattern:<br>
    1) Collect user input in the form. For AddItem, the user needs to enter the Title,  
    Description, StartPrice, Quantity, etc.<br> 
    2) Create an SDK call class. e.g., for AddItemCall:<br>
    &nbsp;&nbsp;&nbsp;<font size="2" color="#0000ff"> </font><font SIZE="2">ItemType 
    item = FillItem();<br>
    &nbsp;&nbsp;&nbsp; AddItemCall apicall = </font><font SIZE="2" COLOR="#0000ff">new</font><font SIZE="2"> 
    AddItemCall(Context);</font><font SIZE="2"> 
    <br>
    3</font>) Call the verb method in the call class.<br> 
    <font SIZE="2">&nbsp;&nbsp;&nbsp;</font> <font SIZE="2">FeeTypeCollection 
    fees = apicall.AddItem(item);</font><br>
    <font SIZE="2"> 
    4</font>) Display call results in a form. 
    <p>&nbsp;</li>
</ul>


</body>
</html>

